/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        m0: consolelog {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp N &kp S &kp O &kp L &kp E &kp DOT &kp L &kp O &kp G &kp LPAR &kp RPAR &kp LEFT>;
            label = "CONSOLELOG";
        };

        m2: m2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCMD &kp SPACE &kt LCMD>;
            label = "M2";
        };

        m3: m3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCTRL &kt LCMD &kp Q &kt LCMD &kt LCTRL>;
            label = "M3";
        };

        m4: m4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCMD &kt LSHIFT &kp NUMBER_3 &kt LEFT_SHIFT &kt LCMD>;
            label = "M4";
        };

        m5: m5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCMD &kt LSHIFT &kp NUMBER_4 &kt LEFT_SHIFT &kt LCMD>;
            label = "M5";
        };

        m6: m6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCMD &kt LSHIFT &kp N5 &kt LEFT_SHIFT &kt LCMD>;
            label = "M6";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I           &kp O    &kp P     &kp LEFT_BRACKET
&kp LEFT_ALT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K           &kp L    &kp SEMI  &kp SQT
&kp LCTRL     &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA       &kp DOT  &kp FSLH  &kp GRAVE
                            &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LEFT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none       &kp N1           &kp N2       &kp N3    &kp N4          &kp N5             &kp N6            &kp N7             &kp N8             &kp N9                &kp N0                 &kp BSPC
&kp ESCAPE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR      &kp PERCENT        &kp CARET         &kp AMPERSAND      &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&kp LCTRL   &kp EQUAL        &kp MINUS    &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOUBLE_QUOTES  &kp COLON             &kp UNDERSCORE         &kp BACKSLASH
                                          &kp LGUI  &trans          &kp SPACE          &kp RET           &trans             &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none   &none  &none  &m4     &m5    &kp BACKSLASH    &none             &none     &none          &none             &none  &none
&trans  &none  &none  &none   &m6    &kp CAPS         &kp LEFT          &kp DOWN  &kp UP_ARROW   &kp RIGHT         &none  &kp BACKSPACE
&trans  &none  &none  &none   &none  &m0              &kp K_MUTE        &none     &kp LESS_THAN  &kp GREATER_THAN  &none  &kp DELETE
                      &trans  &none  &m2              &kp K_PLAY_PAUSE  &trans    &m3
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans      &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
